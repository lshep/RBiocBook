{
  "hash": "56079858d9a3d3be35b993c50fe83a95",
  "result": {
    "engine": "knitr",
    "markdown": "# Microbiome analysis\n\nThe human microbiome is a complex ecosystem of bacteria, viruses, fungi, and other microorganisms that live in and on the human body. These microorganisms play a crucial role in human health and disease, influencing everything from digestion and metabolism to immune function and mental health. Understanding the composition and function of the human microbiome is a rapidly growing area of research with implications for a wide range of fields, including medicine, agriculture, and environmental science.\n\nMicrobiome analysis involves studying the microbial communities that inhabit different environments, such as the human gut, skin, mouth, and soil. The analysis of microbiome data typically involves quantifying the abundance of different microorganisms in a given sample and comparing the microbial communities across different samples or conditions. This can help researchers identify patterns, relationships, and associations between microbial communities and various factors, such as health status, diet, lifestyle, and environmental conditions.\n\nIn this chapter, we will assume that the data has already been processed and cleaned, and we will focus on analyzing the microbiome data using R. \n\n## Getting started\n\nWe'll be using the `mia` package for microbiome analysis in R. The `mia` package provides a suite of tools for analyzing microbiome data, including functions for loading, processing, and visualizing microbiome data. The package is designed to work with the `SummarizedExperiment` and `TreeSummarizedExperiment` classes, which are specialized data structures for storing microbiome data in R.\n\nTo get started, you'll need to install the `mia` package from GitHub using the `BiocManager` package. If you don't already have the `BiocManager` package installed, you can install it using the following command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Install the mia package\nBiocManager::install(\"microbiome/mia\")\n```\n:::\n\n\n::: {.callout-note}\n**Note:** The `mia` package is part of the Bioconductor project, but in this case, we are installing it directly from GitHub using the `microbiome/mia` repository. This is a common practice when working with development versions of packages or with packages that are not yet available on Bioconductor. \n\n:::\n\nOnce the `mia` package is installed, you can load it into your R session using the following command:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the mia package\nlibrary(mia)\n```\n:::\n\n\nNow that the `mia` package is loaded, we can load the microbiome dataset that we will be working with. \n\n## Accessing microbiome datasets\n\nThere are many publicly available microbiome datasets that you can use for analysis. Bioconductor provides several packages that contain curated microbiome datasets that facilitate access to and loading microbiome data into R for analysis.\n\n[curatedMetagenomicData](https://bioconductor.org/packages/curatedMetagenomicsData) is a large collection of curated human microbiome datasets, provided as TreeSE objects (Pasolli et al. 2017). The resource provides curated human microbiome data including gene families, marker abundance, marker presence, pathway abundance, pathway coverage, and relative abundance for samples from different body sites. See the package homepage for more details on data availability and access.\n\n[The microbiomeDataSets package](https://bioconductor.org/packages/microbiomeDataSets) provides a collection of curated microbiome datasets for teaching and research purposes. The package contains several example datasets that can be used to explore different aspects of microbiome analysis, such as alpha and beta diversity, differential abundance analysis, and visualization.\n\n[The mia package](https://bioconductor.org/packages/mia) and several other packages provide example datasets for learning and testing the functions in the package. These datasets are typically small and easy to work with, making them ideal for learning how to analyze microbiome data in R.\n\n## Data containers\n\nBioconductor provides several specialized data structures for storing and working with microbiome data in R. These data structures are designed to handle the complex and high-dimensional nature of microbiome data and provide a convenient and efficient way to store, manipulate, and analyze microbiome data in R.\n\n[SummarizedExperiment (SE)](https://bioconductor.org/packages/SummarizedExperiment) (Morgan et al. 2020) is a generic and highly optimized container for complex data structures. It has become a common choice for analyzing various types of biomedical profiling data, such as RNAseq, ChIp-Seq, microarrays, flow cytometry, proteomics, and single-cell sequencing.\n\n\n[TreeSummarizedExperiment](https://bioconductor.org/packages/TreeSummarizedExperiment) (Huang 2020) was developed as an extension to incorporate hierarchical information (such as phylogenetic trees and sample hierarchies) and reference sequences.\n\n\n## Loading a microbiome dataset\n\nWe will be using the `curatedMetagenomicData` package to load the `FengQ_2015` dataset. This dataset contains microbiome data from a study by [Feng et al. (2015)](https://pubmed.ncbi.nlm.nih.gov/25758642/). The curatedMetagenomicData package provides a convenient interface for accessing microbiome datasets that have been pre-processed and curated for analysis. \n\n::: {.callout-note}\nTake a moment to familiarize yourself with at least the title and abstract from the paper. \nWe won't be reproducing the analysis in the paper, but it is helpful to connect the code in this workflow to the biology and research.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Again, before using a package, we must install it\n# just once.\nBiocManager::install('curatedMetagenomicData')\n```\n:::\n\n\nOnce installed, we can use the package. \n\nIgnore the details of the next few lines of code for now, but suffice it to say that what the code will do for us is to load a dataset for downstream analysis.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the FengQ_2015 dataset\nlibrary(curatedMetagenomicData)\ntse <- curatedMetagenomicData(\"FengQ_2015.relative_abundance\", dryrun = FALSE, rownames = \"short\")[[1]]\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\n$`2021-03-31.FengQ_2015.relative_abundance`\ndropping rows without rowTree matches:\n  k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Atopobiaceae|g__Olsenella|s__Olsenella_profusa\n  k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Coriobacteriaceae|g__Collinsella|s__Collinsella_stercoris\n  k__Bacteria|p__Actinobacteria|c__Coriobacteriia|o__Coriobacteriales|f__Coriobacteriaceae|g__Enorma|s__[Collinsella]_massiliensis\n  k__Bacteria|p__Firmicutes|c__Bacilli|o__Bacillales|f__Bacillales_unclassified|g__Gemella|s__Gemella_bergeri\n  k__Bacteria|p__Firmicutes|c__Bacilli|o__Lactobacillales|f__Carnobacteriaceae|g__Granulicatella|s__Granulicatella_elegans\n  k__Bacteria|p__Firmicutes|c__Clostridia|o__Clostridiales|f__Ruminococcaceae|g__Ruminococcus|s__Ruminococcus_champanellensis\n  k__Bacteria|p__Firmicutes|c__Erysipelotrichia|o__Erysipelotrichales|f__Erysipelotrichaceae|g__Bulleidia|s__Bulleidia_extructa\n  k__Bacteria|p__Proteobacteria|c__Betaproteobacteria|o__Burkholderiales|f__Sutterellaceae|g__Sutterella|s__Sutterella_parvirubra\n  k__Bacteria|p__Synergistetes|c__Synergistia|o__Synergistales|f__Synergistaceae|g__Cloacibacillus|s__Cloacibacillus_evryensis\n```\n\n\n:::\n:::\n\n\nThis code goes out to the internet and downloads the dataset for you. The `tse` object is a `TreeSummarizedExperiment` object that contains the microbiome data from the Feng et al. (2015) study. The `TreeSummarizedExperiment` class is a specialized data structure for storing microbiome data in R, and it is used by the `mia` package for microbiome analysis.\n\n::: {.callout-tip}\nIf you are working with your own microbiome data, you will often need to  load it into R using functions like `read.csv()` or `read.table()` to read tabular data files. Make sure your data is properly formatted and cleaned before loading it into R for analysis. \n:::\n\nOnce the data is loaded into R, we can start exploring the data to understand its structure and contents. The `tse` object is a `TreeSummarizedExperiment` object, which is a specialized data structure for storing microbiome data in R. It works quite like a data.frame in, but with many specialized structures for storing microbiome experiment data as shown in @fig-tse-anatomy. We can use various functions to explore the data stored in the `tse` object. See the [TreeSummarizedExperiment](https://bioconductor.org/packages/TreeSummarizedExperiment) package for more details.\n\nThis section provides an introduction to these data containers. In microbiome data science, these containers link taxonomic abundance tables with rich side information on the features (microbes) and samples. Taxonomic abundance data can be obtained by 16S rRNA amplicon or metagenomic sequencing, phylogenetic microarrays, or by other means. Many microbiome experiments include multiple versions and types of data generated independently or derived from each other through transformation or agglomeration. \n\n\n![Anatomy of a TreeSummarizedExperiment object. Compared to the SingleCellExperiment objects, TreeSummarizedExperiment has five additional slots. **rowTree**: the hierarchical structure on the rows of the assays. \n**rowLinks**: the link information between rows of the assays and the rowTree.\n**colTree**: the hierarchical structure on the columns of the assays.\n**colLinks**: the link information between columns of the assays and the colTree.\n**referenceSeq** (optional): the reference sequence data per feature (row).\n](images/treesummarizedexperiment.png){#fig-tse-anatomy}\n\n\nTo get an overview of the data, we can simply type the name of the object in the R console:\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Print the object\ntse\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass: TreeSummarizedExperiment \ndim: 601 154 \nmetadata(1): agglomerated_by_rank\nassays(1): relative_abundance\nrownames(601): [Bacteroides] pectinophilus [Butyribacterium]\n  methylotrophicum ... Weissella cibaria Weissella viridescens\nrowData names(7): superkingdom phylum ... genus species\ncolnames(154): SID31004 SID31009 ... SID532832 SID532915\ncolData names(28): study_name subject_id ... ldl hba1c\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\nrowLinks: a LinkDataFrame (601 rows)\nrowTree: 1 phylo tree(s) (10430 leaves)\ncolLinks: NULL\ncolTree: NULL\n```\n\n\n:::\n:::\n\n\nObserve how the output of the `tse` object will show you the dimensions of the data, the metadata associated with the samples and features, etc. However, the data themselves are not printed to the console due to the large size of the dataset. The `TreeSummarizedExperiment` object is a complex data structure that contains multiple components, including the abundance data, sample information, feature information, and other metadata.\n\nNext, we'll look at some of the key components of the `TreeSummarizedExperiment` object and how to access and manipulate them.\n\n### Experimental measurements: `assays`\n\nWhen working with high-throughput biological data, the results of a workflow (often complex), is usually something resembling an Excel spreadsheet with samples as columns and features (genes, microbes, CpG sites, ...) as rows. \nThe quantitative information (the numbers) are called \"assay\" data since they result from running an \"assay.\" \nThe microbiome is the collection of all microbes (such as bacteria, viruses, fungi, etc.) in the body. \nWhen studying these microbes, data is needed, and that’s where assays come in. \nAn assay is a way of measuring the presence and abundance of different types of microbes in a sample. \nFor example, if you want to know how many bacteria of a certain type are in your gut, you can use an assay to measure this. \nWhen storing assays, the original data is count-based. \nHowever, the original count-based taxonomic abundance tables may undergo different transformations, such as logarithmic, Centered Log-Ratio (CLR), or relative abundance. \nThese are typically stored in **assays**.\n\nThe assays slot contains the experimental data as multiple count matrices. The result of assays is a list of matrices.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nassays(tse)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of length 1\nnames(1): relative_abundance\n```\n\n\n:::\n:::\n\n\nIndividual assays can be accessed via `assay()` function. The result is a matrix. And recall that when we subset a matrix, we use `[]` and specify the `[<rows>, <columns>]`. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# just the first 5 rows and columns to make the results easier to see\nassay(tse, \"relative_abundance\")[1:5, 1:5]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                   SID31004 SID31009 SID31021 SID31030 SID31071\n[Bacteroides] pectinophilus               0  0.35998  0.00000  0.00000        0\n[Butyribacterium] methylotrophicum        0  0.00000  0.00000  0.00000        0\n[Clostridium] hylemonae                   0  0.00000  0.00000  0.00000        0\n[Clostridium] innocuum                    0  0.00371  0.00384  0.01735        0\n[Clostridium] leptum                      0  0.00723  0.03135  0.03833        0\n```\n\n\n:::\n:::\n\n\nYou can, of course, choose a different number of rows or columns it you like. \n\n### Sample information: `colData`\n\ncolData contains information about the samples used in the study. \nThis information can include details such as the sample ID, the primers used in the analysis, the barcodes associated with the sample (truncated or complete), the type of sample (e.g. soil, fecal, mock) and a description of the sample. \nYou can also add experimental details about samples as you see fit (eg., the sample preparation data, prep kit lot number, or anything else you might want to track).\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolData(tse)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDataFrame with 154 rows and 28 columns\n           study_name  subject_id   body_site antibiotics_current_use\n          <character> <character> <character>             <character>\nSID31004   FengQ_2015    SID31004       stool                      no\nSID31009   FengQ_2015    SID31009       stool                      no\nSID31021   FengQ_2015    SID31021       stool                      no\nSID31030   FengQ_2015    SID31030       stool                      no\nSID31071   FengQ_2015    SID31071       stool                      no\n...               ...         ...         ...                     ...\nSID532796  FengQ_2015   SID532796       stool                      no\nSID532802  FengQ_2015   SID532802       stool                      no\nSID532826  FengQ_2015   SID532826       stool                      no\nSID532832  FengQ_2015   SID532832       stool                      no\nSID532915  FengQ_2015   SID532915       stool                      no\n          study_condition                disease       age age_category\n              <character>            <character> <integer>  <character>\nSID31004              CRC CRC;fatty_liver;hype..        64        adult\nSID31009          control fatty_liver;hyperten..        68       senior\nSID31021          control                healthy        60        adult\nSID31030          adenoma adenoma;fatty_liver;..        70       senior\nSID31071          control            fatty_liver        68       senior\n...                   ...                    ...       ...          ...\nSID532796         control fatty_liver;hyperten..        73       senior\nSID532802         control                healthy        68       senior\nSID532826         control T2D;fatty_liver;hype..        78       senior\nSID532832         adenoma adenoma;fatty_liver;..        68       senior\nSID532915         control                healthy        43        adult\n               gender     country non_westernized sequencing_platform\n          <character> <character>     <character>         <character>\nSID31004         male         AUT              no       IlluminaHiSeq\nSID31009         male         AUT              no       IlluminaHiSeq\nSID31021       female         AUT              no       IlluminaHiSeq\nSID31030         male         AUT              no       IlluminaHiSeq\nSID31071         male         AUT              no       IlluminaHiSeq\n...               ...         ...             ...                 ...\nSID532796      female         AUT              no       IlluminaHiSeq\nSID532802        male         AUT              no       IlluminaHiSeq\nSID532826        male         AUT              no       IlluminaHiSeq\nSID532832      female         AUT              no       IlluminaHiSeq\nSID532915      female         AUT              no       IlluminaHiSeq\n          DNA_extraction_kit        PMID number_reads number_bases\n                 <character> <character>    <integer>    <numeric>\nSID31004               MoBio    25758642     40898340   3649611221\nSID31009               MoBio    25758642     66107961   6196998053\nSID31021               MoBio    25758642     60789126   5708593447\nSID31030               MoBio    25758642     50300253   4741158330\nSID31071               MoBio    25758642     51945426   4913627034\n...                      ...         ...          ...          ...\nSID532796              MoBio    25758642     50845712   4754848864\nSID532802              MoBio    25758642     41480415   3868696049\nSID532826              MoBio    25758642     35346002   3348368467\nSID532832              MoBio    25758642     42184599   3951224696\nSID532915              MoBio    25758642     51594677   4886998833\n          minimum_read_length median_read_length      NCBI_accession\n                    <integer>          <integer>         <character>\nSID31004                   30                 93 ERR688505;ERR688358\nSID31009                   30                 96 ERR688506;ERR688359\nSID31021                   30                 96 ERR688507;ERR688360\nSID31030                   30                 96 ERR688508;ERR688361\nSID31071                   30                 97 ERR688509;ERR688362\n...                       ...                ...                 ...\nSID532796                  30                 95 ERR710428;ERR710419\nSID532802                  30                 96 ERR710429;ERR710420\nSID532826                  30                 97 ERR710430;ERR710421\nSID532832                  30                 96 ERR710431;ERR710422\nSID532915                  30                 96 ERR710432;ERR710423\n                         curator       BMI        diet disease_subtype\n                     <character> <numeric> <character>     <character>\nSID31004  Paolo_Manghi;Marisa_..     29.35  vegetarian       carcinoma\nSID31009  Paolo_Manghi;Marisa_..     32.00    omnivore              NA\nSID31021  Paolo_Manghi;Marisa_..     22.10    omnivore              NA\nSID31030  Paolo_Manghi;Marisa_..     34.11    omnivore advancedadenoma\nSID31071  Paolo_Manghi;Marisa_..     23.45    omnivore              NA\n...                          ...       ...         ...             ...\nSID532796 Paolo_Manghi;Marisa_..     26.56    omnivore              NA\nSID532802 Paolo_Manghi;Marisa_..     23.53    omnivore              NA\nSID532826 Paolo_Manghi;Marisa_..     31.22    omnivore              NA\nSID532832 Paolo_Manghi;Marisa_..     27.55    omnivore advancedadenoma\nSID532915 Paolo_Manghi;Marisa_..     22.65    omnivore              NA\n                  tnm triglycerides       hdl       ldl     hba1c\n          <character>     <numeric> <numeric> <numeric> <numeric>\nSID31004       t1n0m0           172        28        92       5.2\nSID31009           NA           101        50       157        NA\nSID31021           NA            53        60       122        NA\nSID31030           NA            89        74       146        NA\nSID31071           NA           258        40       231        NA\n...               ...           ...       ...       ...       ...\nSID532796          NA           100        61       114       5.4\nSID532802          NA            80        67       158       5.8\nSID532826          NA           212        32        90       6.9\nSID532832          NA           141        51       184       5.6\nSID532915          NA            51        80       132       5.1\n```\n\n\n:::\n:::\n\n\nAs you can see, there is a lot of information stored in the `colData` slot, including sample IDs, study conditions, and other metadata associated with the samples. \nThis information is essential for understanding the context of the microbiome data and for performing downstream analyses. \n\n::: {.callout-tip}\n## Use sample colData as database of information about your samples.\nBy keeping a relatively complete colData, you can answer questions about your findings without having to refer back to external Excel spreadsheets or lab notebooks.\n:::\n\n\n### Measured feature information: `rowData`\n\nrowData contains data on the features of the analyzed samples. This is particularly important in the microbiome field for storing taxonomic information. This taxonomic information is extremely important for understanding the composition and diversity of the microbiome in each sample analyzed. It enables identification of the different types of microorganisms present in samples. It also allows you to explore the relationships between microbiome composition and various environmental or health factors.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(rowData(tse))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDataFrame with 6 rows and 7 columns\n                                   superkingdom      phylum            class\n                                    <character> <character>      <character>\n[Bacteroides] pectinophilus            Bacteria  Firmicutes       Clostridia\n[Butyribacterium] methylotrophicum     Bacteria  Firmicutes       Clostridia\n[Clostridium] hylemonae                Bacteria  Firmicutes       Clostridia\n[Clostridium] innocuum                 Bacteria  Firmicutes Erysipelotrichia\n[Clostridium] leptum                   Bacteria  Firmicutes       Clostridia\n[Clostridium] methylpentosum           Bacteria  Firmicutes       Clostridia\n                                                order              family\n                                          <character>         <character>\n[Bacteroides] pectinophilus             Eubacteriales                  NA\n[Butyribacterium] methylotrophicum      Eubacteriales      Clostridiaceae\n[Clostridium] hylemonae                 Eubacteriales     Lachnospiraceae\n[Clostridium] innocuum             Erysipelotrichales Erysipelotrichaceae\n[Clostridium] leptum                    Eubacteriales    Oscillospiraceae\n[Clostridium] methylpentosum            Eubacteriales    Oscillospiraceae\n                                                    genus\n                                              <character>\n[Bacteroides] pectinophilus                            NA\n[Butyribacterium] methylotrophicum            Clostridium\n[Clostridium] hylemonae                 Lachnoclostridium\n[Clostridium] innocuum             Erysipelatoclostridium\n[Clostridium] leptum                                   NA\n[Clostridium] methylpentosum                           NA\n                                                  species\n                                              <character>\n[Bacteroides] pectinophilus        [Bacteroides] pectin..\n[Butyribacterium] methylotrophicum [Butyribacterium] me..\n[Clostridium] hylemonae            [Clostridium] hylemo..\n[Clostridium] innocuum             [Clostridium] innocuum\n[Clostridium] leptum                 [Clostridium] leptum\n[Clostridium] methylpentosum       [Clostridium] methyl..\n```\n\n\n:::\n:::\n\n\n### rowTree\n\nPhylogenetic trees also play an important role in the microbiome field. The TreeSE class can keep track of features and node relations via two functions, rowTree and rowLinks.\n\nA tree can be accessed via `rowTree()` as `phylo` object.\n\n::: {.callout-note}\n## What is this tree of which we speak?\n\nThe \"tree\" in a `TreeSummarizedExperiment` is a phylogenetic tree describing the inferred evolutionary relationships among various biological species or other entities based upon similarities and differences in their physical or genetic characteristics. \nThe tree of life is a phylogenetic tree that shows the evolutionary relationships among all living organisms on Earth.\n\nIn the context of microbiome analysis, phylogenetic trees are used to represent the evolutionary relationships between different microbial taxa based on their genetic sequences. \nThese trees can help researchers understand the diversity and relatedness of different microbes in a sample and provide insights into the evolutionary history of the microbial community.\n\nThe `phylo` class in R is used to represent phylogenetic trees and provides functions for working with and visualizing these trees. The `ggtree` package is a popular package for visualizing phylogenetic trees in R and provides a wide range of options for customizing the appearance of the tree.\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrowTree(tse)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nPhylogenetic tree with 10430 tips and 10429 internal nodes.\n\nTip labels:\n  k__Archaea|p__Candidatus_Micrarchaeota|c__Candidatus_Micrarchaeota_unclassified|o__Candidatus_Micrarchaeota_unclassified|f__Candidatus_Micrarchaeota_unclassified|g__Candidatus_Micrarchaeota_unclassified|s__Candidatus_Micrarchaeota_archaeon_CG1_02_55_22, k__Archaea|p__Archaea_unclassified|c__Archaea_unclassified|o__Archaea_unclassified|f__Archaea_unclassified|g__Archaea_unclassified|s__archaeon_GW2011_AR15, k__Archaea|p__Candidatus_Diapherotrites|c__Candidatus_Diapherotrites_unclassified|o__Candidatus_Diapherotrites_unclassified|f__Candidatus_Diapherotrites_unclassified|g__Candidatus_Diapherotrites_unclassified|s__Candidatus_Diapherotrites_archaeon_CG08_land_8_20_14_0_20_34_12, k__Archaea|p__Archaea_unclassified|c__Archaea_unclassified|o__Archaea_unclassified|f__Archaea_unclassified|g__Archaea_unclassified|s__archaeon_GW2011_AR10, k__Archaea|p__Candidatus_Diapherotrites|c__Candidatus_Diapherotrites_unclassified|o__Candidatus_Diapherotrites_unclassified|f__Candidatus_Diapherotrites_unclassified|g__Candidatus_Diapherotrites_unclassified|s__Candidatus_Diapherotrites_archaeon_CG11_big_fil_rev_8_21_14_0_20_37_9, k__Archaea|p__Euryarchaeota|c__Euryarchaeota_unclassified|o__Euryarchaeota_unclassified|f__Euryarchaeota_unclassified|g__Euryarchaeota_unclassified|s__Euryarchaeota_archaeon_TMED173, ...\n\nRooted; includes branch length(s).\n```\n\n\n:::\n:::\n\n\nThe `rowTree` slot contains information about the hierarchical structure of the data, such as the relationships between different microbial taxa based on their genetic sequences. This information can be used to explore the evolutionary relationships between different microbes and to visualize the diversity and relatedness of the microbial community in a sample. \n\nWe can visualize the phylogenetic tree using the `ggtree` package in R. The `ggtree` package provides functions for visualizing phylogenetic trees in a variety of formats, including circular, rectangular, and radial layouts. Here, we'll use the `ggtree` package to visualize the phylogenetic tree stored in the `rowTree` slot of the `TreeSummarizedExperiment` object.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggtree)\nggtree(rowTree(tse))\n```\n\n::: {.cell-output-display}\n![](310_microbiome_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nSee the [ggtree](https://bioconductor.org/packages/ggtree) package for more details on visualizing tree structures in R and, for more fun, the [ggtree book](https://yulab-smu.top/treedata-book/). \n\nThe `rowLink` slot contains information about the relationships between the features and the tree structure. This information can be used to link the features in the data to the nodes in the tree and to explore the relationships between the features based on their abundance profiles.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrowLinks(tse)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nLinkDataFrame with 601 rows and 5 columns\n                                                  nodeLab nodeLab_alias\n                                              <character>   <character>\n[Bacteroides] pectinophilus        k__Bacteria|p__Firmi..    alias_3706\n[Butyribacterium] methylotrophicum k__Bacteria|p__Firmi..    alias_3347\n[Clostridium] hylemonae            k__Bacteria|p__Firmi..    alias_3662\n[Clostridium] innocuum             k__Bacteria|p__Firmi..    alias_4453\n[Clostridium] leptum               k__Bacteria|p__Firmi..    alias_3525\n...                                                   ...           ...\nVeillonella sp. T11011-6           k__Bacteria|p__Firmi..    alias_3074\nVeillonella tobetsuensis           k__Bacteria|p__Firmi..    alias_3070\nVictivallis vadensis               k__Bacteria|p__Lenti..    alias_5062\nWeissella cibaria                  k__Bacteria|p__Firmi..    alias_4775\nWeissella viridescens              k__Bacteria|p__Firmi..    alias_4773\n                                     nodeNum    isLeaf   whichTree\n                                   <integer> <logical> <character>\n[Bacteroides] pectinophilus             3706      TRUE       phylo\n[Butyribacterium] methylotrophicum      3347      TRUE       phylo\n[Clostridium] hylemonae                 3662      TRUE       phylo\n[Clostridium] innocuum                  4453      TRUE       phylo\n[Clostridium] leptum                    3525      TRUE       phylo\n...                                      ...       ...         ...\nVeillonella sp. T11011-6                3074      TRUE       phylo\nVeillonella tobetsuensis                3070      TRUE       phylo\nVictivallis vadensis                    5062      TRUE       phylo\nWeissella cibaria                       4775      TRUE       phylo\nWeissella viridescens                   4773      TRUE       phylo\n```\n\n\n:::\n:::\n\n\nBoth `rowTree` and `rowLinks` are optional components of the `TreeSummarizedExperiment` object, but when present, they provide valuable information about the hierarchical structure of the data and the relationships between the features in the data.\n\n## Wrangling and subsetting\n\nOne of the huge advantages of using the `SummarizedExperiment` classes in R/Bioconductor is their ability to encapsulate all the information necessary to describe the samples (colData), measured features (rowData, rowTree), and the measurements themselves (assays). \nWhen we manipulate or subset these objects, all the associated information about samples, features, and assays are also subsetted. \n\nThe `mia` package provides several functions for wrangling and subsetting microbiome data. These functions allow you to filter, transform, and manipulate the data to extract the information you need for analysis.\n\n### Subsetting samples\n\nYou can subset the samples in a `TreeSummarizedExperiment` object similarly to how you would subset a `data.frame`. For example, to subset out data based on the age category of the samples, you can use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(colData(tse)$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 64 68 60 70 68 66\n```\n\n\n:::\n:::\n\n\nSince accessing the colData is such a common way of interacting with a `SummarizedExperiment`, we can also access the colData as if it were a data.frame.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(tse$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 64 68 60 70 68 66\n```\n\n\n:::\n\n```{.r .cell-code}\n# and get a summary of all patient ages\nsummary(tse$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  43.00   63.00   68.00   66.85   72.00   86.00 \n```\n\n\n:::\n:::\n\n\nAge is a numeric variable. Let's focus on older patients.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Include all rows, but only columns (samples) who are older than 50\ntse_subset_by_age <- tse[, tse$age > 50]\ntse_subset_by_age\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass: TreeSummarizedExperiment \ndim: 601 146 \nmetadata(1): agglomerated_by_rank\nassays(1): relative_abundance\nrownames(601): [Bacteroides] pectinophilus [Butyribacterium]\n  methylotrophicum ... Weissella cibaria Weissella viridescens\nrowData names(7): superkingdom phylum ... genus species\ncolnames(146): SID31004 SID31009 ... SID532826 SID532832\ncolData names(28): study_name subject_id ... ldl hba1c\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\nrowLinks: a LinkDataFrame (601 rows)\nrowTree: 1 phylo tree(s) (10430 leaves)\ncolLinks: NULL\ncolTree: NULL\n```\n\n\n:::\n:::\n\n\nThe `tse_subset_by_age` is a copy of the original `tse`, but with only the 50+ year old patients. \nIf you want to double-check, you can look at the ages in this new `tse_subset_by_age`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(tse_subset_by_age$age)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  52.00   63.25   68.00   68.02   72.00   86.00 \n```\n\n\n:::\n:::\n\n\n### Agglomerating data\n\nThe microbiome features (organisms) that are measured may be measured at different taxonomic levels. For example, the data may be available at the species, genus, family, or phylum level. Agglomerating data is the process of summarizing the data at a higher taxonomic level by combining the abundances of the lower-level taxa. This can be useful for simplifying the data and reducing the dimensionality of the data.\n\nThe `agglomerateByRank` function in the `mia` package can be used to agglomerate the data at a specified taxonomic rank. For example, to agglomerate the data at the phylum level, you can use the following code:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnew_tse <- agglomerateByRank(tse, rank = \"phylum\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following values are already present in `metadata` and will be\noverwritten: 'agglomerated_by_rank'. Consider using the 'name' argument to\nspecify alternative names.\n```\n\n\n:::\n\n```{.r .cell-code}\n# observe the new object, particularly the number of features (rows)\nnew_tse\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nclass: TreeSummarizedExperiment \ndim: 13 154 \nmetadata(1): agglomerated_by_rank\nassays(1): relative_abundance\nrownames(13): Actinobacteria Ascomycota ... Synergistetes\n  Verrucomicrobia\nrowData names(7): superkingdom phylum ... genus species\ncolnames(154): SID31004 SID31009 ... SID532832 SID532915\ncolData names(28): study_name subject_id ... ldl hba1c\nreducedDimNames(0):\nmainExpName: NULL\naltExpNames(0):\nrowLinks: a LinkDataFrame (13 rows)\nrowTree: 1 phylo tree(s) (10430 leaves)\ncolLinks: NULL\ncolTree: NULL\n```\n\n\n:::\n:::\n\n\nThe resulting `TreeSummarizedExperiment` object contains the data aggregated at the phylum level, with the abundances of the lower-level taxa combined to create a summary at the phylum level. This can make the data easier to work with and interpret, especially when dealing with large and complex microbiome datasets.\n\n## Community indices\n\nIn the field of microbiome ecology several indices to describe samples and\ncommunity of samples are available. In this vignette we just want to give a\nvery brief introduction.\n\n### Alpha diversity\n\ndiversity in microbiology is measured by several indices:\n\n- species richness (total number of species)\n- equitability (distribution of species within a microbiome)\n- diversity (combination of the two)\n\nFunctions for calculating alpha and beta diversity indices are available.\nUsing `addAlpha` multiple diversity indices are calculated by default\nand results are stored automatically in `colData`. \n\n::: {.callout-note}\n## Why do we care about alpha diversity?\n\nAlpha diversity is a \"statistic\" that somehow represents how complex or \"diverse\" a microbiome sample is.\nYou can imagine lots of situations that might significantly alter the diversity of a sample, such as antibiotic use, systemic chemotherapy, autoimmune conditions, dietary changes, etc. \nWhen we have two experimental conditions such antibiotic use vs no antibiotic use, the alpha diversity in the two sample groups may differ significantly.\nThat association, if present, could be helpful in understanding biology or even developing a biomarker. \n:::\n\nIn the code below we calculate the Shannon and observed diversity indices. \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntse <- addAlpha(tse, index = \"shannon\", assay.type = \"relative_abundance\")\ntse <- addAlpha(tse, index = \"observed\", assay.type = \"relative_abundance\")\ncolnames(colData(tse))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"study_name\"              \"subject_id\"             \n [3] \"body_site\"               \"antibiotics_current_use\"\n [5] \"study_condition\"         \"disease\"                \n [7] \"age\"                     \"age_category\"           \n [9] \"gender\"                  \"country\"                \n[11] \"non_westernized\"         \"sequencing_platform\"    \n[13] \"DNA_extraction_kit\"      \"PMID\"                   \n[15] \"number_reads\"            \"number_bases\"           \n[17] \"minimum_read_length\"     \"median_read_length\"     \n[19] \"NCBI_accession\"          \"curator\"                \n[21] \"BMI\"                     \"diet\"                   \n[23] \"disease_subtype\"         \"tnm\"                    \n[25] \"triglycerides\"           \"hdl\"                    \n[27] \"ldl\"                     \"hba1c\"                  \n[29] \"shannon\"                 \"observed\"               \n```\n\n\n:::\n:::\n\n\nThe `observed` index is a simple count of the number of species present in a sample, while the `shannon` index takes into account both the number of species and their relative abundances. \nThese indices provide information about the diversity and richness of the microbial community in each sample.\n\nAnd we can look at the resulting colData() which now contains the calculated alpha diversity indices.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncolData(tse)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nDataFrame with 154 rows and 30 columns\n           study_name  subject_id   body_site antibiotics_current_use\n          <character> <character> <character>             <character>\nSID31004   FengQ_2015    SID31004       stool                      no\nSID31009   FengQ_2015    SID31009       stool                      no\nSID31021   FengQ_2015    SID31021       stool                      no\nSID31030   FengQ_2015    SID31030       stool                      no\nSID31071   FengQ_2015    SID31071       stool                      no\n...               ...         ...         ...                     ...\nSID532796  FengQ_2015   SID532796       stool                      no\nSID532802  FengQ_2015   SID532802       stool                      no\nSID532826  FengQ_2015   SID532826       stool                      no\nSID532832  FengQ_2015   SID532832       stool                      no\nSID532915  FengQ_2015   SID532915       stool                      no\n          study_condition                disease       age age_category\n              <character>            <character> <integer>  <character>\nSID31004              CRC CRC;fatty_liver;hype..        64        adult\nSID31009          control fatty_liver;hyperten..        68       senior\nSID31021          control                healthy        60        adult\nSID31030          adenoma adenoma;fatty_liver;..        70       senior\nSID31071          control            fatty_liver        68       senior\n...                   ...                    ...       ...          ...\nSID532796         control fatty_liver;hyperten..        73       senior\nSID532802         control                healthy        68       senior\nSID532826         control T2D;fatty_liver;hype..        78       senior\nSID532832         adenoma adenoma;fatty_liver;..        68       senior\nSID532915         control                healthy        43        adult\n               gender     country non_westernized sequencing_platform\n          <character> <character>     <character>         <character>\nSID31004         male         AUT              no       IlluminaHiSeq\nSID31009         male         AUT              no       IlluminaHiSeq\nSID31021       female         AUT              no       IlluminaHiSeq\nSID31030         male         AUT              no       IlluminaHiSeq\nSID31071         male         AUT              no       IlluminaHiSeq\n...               ...         ...             ...                 ...\nSID532796      female         AUT              no       IlluminaHiSeq\nSID532802        male         AUT              no       IlluminaHiSeq\nSID532826        male         AUT              no       IlluminaHiSeq\nSID532832      female         AUT              no       IlluminaHiSeq\nSID532915      female         AUT              no       IlluminaHiSeq\n          DNA_extraction_kit        PMID number_reads number_bases\n                 <character> <character>    <integer>    <numeric>\nSID31004               MoBio    25758642     40898340   3649611221\nSID31009               MoBio    25758642     66107961   6196998053\nSID31021               MoBio    25758642     60789126   5708593447\nSID31030               MoBio    25758642     50300253   4741158330\nSID31071               MoBio    25758642     51945426   4913627034\n...                      ...         ...          ...          ...\nSID532796              MoBio    25758642     50845712   4754848864\nSID532802              MoBio    25758642     41480415   3868696049\nSID532826              MoBio    25758642     35346002   3348368467\nSID532832              MoBio    25758642     42184599   3951224696\nSID532915              MoBio    25758642     51594677   4886998833\n          minimum_read_length median_read_length      NCBI_accession\n                    <integer>          <integer>         <character>\nSID31004                   30                 93 ERR688505;ERR688358\nSID31009                   30                 96 ERR688506;ERR688359\nSID31021                   30                 96 ERR688507;ERR688360\nSID31030                   30                 96 ERR688508;ERR688361\nSID31071                   30                 97 ERR688509;ERR688362\n...                       ...                ...                 ...\nSID532796                  30                 95 ERR710428;ERR710419\nSID532802                  30                 96 ERR710429;ERR710420\nSID532826                  30                 97 ERR710430;ERR710421\nSID532832                  30                 96 ERR710431;ERR710422\nSID532915                  30                 96 ERR710432;ERR710423\n                         curator       BMI        diet disease_subtype\n                     <character> <numeric> <character>     <character>\nSID31004  Paolo_Manghi;Marisa_..     29.35  vegetarian       carcinoma\nSID31009  Paolo_Manghi;Marisa_..     32.00    omnivore              NA\nSID31021  Paolo_Manghi;Marisa_..     22.10    omnivore              NA\nSID31030  Paolo_Manghi;Marisa_..     34.11    omnivore advancedadenoma\nSID31071  Paolo_Manghi;Marisa_..     23.45    omnivore              NA\n...                          ...       ...         ...             ...\nSID532796 Paolo_Manghi;Marisa_..     26.56    omnivore              NA\nSID532802 Paolo_Manghi;Marisa_..     23.53    omnivore              NA\nSID532826 Paolo_Manghi;Marisa_..     31.22    omnivore              NA\nSID532832 Paolo_Manghi;Marisa_..     27.55    omnivore advancedadenoma\nSID532915 Paolo_Manghi;Marisa_..     22.65    omnivore              NA\n                  tnm triglycerides       hdl       ldl     hba1c   shannon\n          <character>     <numeric> <numeric> <numeric> <numeric> <numeric>\nSID31004       t1n0m0           172        28        92       5.2   3.28881\nSID31009           NA           101        50       157        NA   3.10400\nSID31021           NA            53        60       122        NA   3.37028\nSID31030           NA            89        74       146        NA   2.59465\nSID31071           NA           258        40       231        NA   3.14486\n...               ...           ...       ...       ...       ...       ...\nSID532796          NA           100        61       114       5.4   3.65802\nSID532802          NA            80        67       158       5.8   3.19414\nSID532826          NA           212        32        90       6.9   3.15717\nSID532832          NA           141        51       184       5.6   3.21046\nSID532915          NA            51        80       132       5.1   3.48644\n           observed\n          <numeric>\nSID31004        100\nSID31009        105\nSID31021        115\nSID31030        105\nSID31071        112\n...             ...\nSID532796       131\nSID532802       109\nSID532826       101\nSID532832        93\nSID532915       126\n```\n\n\n:::\n:::\n\n\nThe `scater` package provides some convenient plotting functions that are designed to work with the `SummarizedExperiment` class.\n\n\n::: {.cell messasge='false'}\n\n```{.r .cell-code}\nlibrary(scater)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: scuttle\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: ggplot2\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'scater'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:ggtree':\n\n    multiplot\n```\n\n\n:::\n\n```{.r .cell-code}\nplotColData(tse,\n    \"observed\",             # the y-axis value that we just calculated\n    \"study_condition\",      # The x-axis\n    colour_by = \"gender\"    # Color the points by gender\n) +\n    theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n    labs(y = expression(Richness[Observed]))  # and give a meaningful label\n```\n\n::: {.cell-output-display}\n![](310_microbiome_files/figure-html/plotAlphaDiversity-1.png){width=672}\n:::\n:::\n\n\n### Beta diversity\n\nCommunity similarity refers to the way microorganisms resemble each other in terms of their composition and abundance of different microbial taxa. This can help us understand to what degree different samples resemble each other and finding key information. In microbiome analysis however, it's more common to measure the dissimilarity/Beta diversity between two samples A and B using the Bray-Curtis measure which is defined as follows:\n\n$$\nBC_{ij} = \\frac{\\sum_{k} |A_{k} - B_{k}|}{\\sum_{k} (A_{k} + B_{k})}\n$$ \n\nwhere $A_{k}$ and $B_{k}$ are the abundances of taxon $k$ in samples A and B, respectively. The Bray-Curtis dissimilarity ranges from 0 (identical communities) to 1 (completely different communities).\n\nThe `mia` package provides functions for calculating beta diversity indices, such as the Bray-Curtis dissimilarity, Jaccard similarity, and UniFrac distance. These indices can be used to compare the microbial communities between different samples and to identify patterns and relationships between samples based on their microbial composition.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Run PCoA on relabundance assay with Bray-Curtis distances\nlibrary(vegan)\n\ntse <- runMDS(tse,\n    FUN = vegdist,\n    method = \"bray\",\n    assay.type = \"relative_abundance\",\n    name = \"MDS_bray\"\n)\n```\n:::\n\n\nThis code is a bit to unpack. It calculates the Bray-Curtis dissimilarity between samples in the `tse` object using the `vegdist` function from the `vegan` package. The resulting dissimilarity matrix is then used to perform a Principal Coordinate Analysis (PCoA) using the `runMDS` function from the `scater` package. The PCoA is a dimensionality reduction technique that projects the high-dimensional Bray-Curtis dissimilarity matrix onto a lower-dimensional space while preserving the pairwise distances between samples.\n\nThe resulting `TreeSummarizedExperiment` object now contains the Bray-Curtis dissimilarity matrix in the `MDS_bray` slot, which can be used to visualize the relationships between samples based on their microbial composition.\n\nWe can visualize the results of the PCoA using the `plotReducedDim` function from the `scater` package. This function creates a plot of the reduced dimensions (PCoA) and colors the samples based on a specified variable, such as the study condition\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create ggplot object\np <- plotReducedDim(tse, \"MDS_bray\", colour_by = \"study_condition\")\n\nprint(p)\n```\n\n::: {.cell-output-display}\n![](310_microbiome_files/figure-html/showPCoA-1.png){width=672}\n:::\n:::\n\n\nYou can experiment with different variables to color the samples and explore the relationships between samples based on their microbial composition.\n\n## Microbial composition\n\nLet's now look at the microbial composition of the samples in the `tse` object. The microbial composition refers to the relative abundances of different microbial taxa in each sample. This information can provide insights into the diversity and structure of the microbial community in each sample and help identify patterns and relationships between samples based on their microbial composition.\n\nThe `mia` package provides functions for visualizing the microbial composition of samples, such as bar plots, heatmaps, and stacked bar plots. These plots can help you explore the relative abundances of different microbial taxa in each sample and identify patterns and relationships between samples based on their microbial composition.\n\n### Abundance\n\nWe can start by creating a bar plot of the top 40 most abundant taxa in the dataset. This plot shows the relative abundances of the top 40 taxa in each sample, with the taxa sorted by abundance.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(miaViz)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nLoading required package: ggraph\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'miaViz'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:mia':\n\n    plotNMDS\n```\n\n\n:::\n\n```{.r .cell-code}\nplotAbundanceDensity(tse,\n    layout = \"jitter\",\n    assay.type = \"relative_abundance\",\n    n = 40\n) +\n    scale_x_log10(label = scales::percent)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_x_log10(label = scales::percent): log-10 transformation\nintroduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](310_microbiome_files/figure-html/plotTopTaxa-1.png){width=672}\n:::\n:::\n\n\nWe can also look at the relative abundances of specific taxa in the dataset. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplotAbundanceDensity(tse,\n    layout = \"density\",\n    assay.type = \"relative_abundance\",\n    n = 5, colour_by = \"study_condition\"\n) +\n    scale_x_log10()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning in scale_x_log10(): log-10 transformation introduced infinite values.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 53 rows containing non-finite outside the scale range\n(`stat_density()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](310_microbiome_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n### Prevalence\n\nPrevalence refers to the proportion of samples in which a taxon is present. This information can help identify the most common and rare taxa in the dataset and provide insights into the distribution of different taxa across samples.\n\nLet's agglomerate the data at the genus level and then plot the prevalence of the top 20 most prevalent genera in the dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntse_genus <- agglomerateByRank(tse, rank = \"genus\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following values are already present in `metadata` and will be\noverwritten: 'agglomerated_by_rank'. Consider using the 'name' argument to\nspecify alternative names.\n```\n\n\n:::\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(getPrevalence(tse_genus,\n    detection = 1 / 100,\n    sort = TRUE, assay.type = \"relative_abundance\",\n    as.relative = TRUE\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Bifidobacterium              Dorea   Faecalibacterium Mediterraneibacter \n         0.7857143          0.7662338          0.7337662          0.7272727 \n      Anaerostipes            Blautia \n         0.7272727          0.7077922 \n```\n\n\n:::\n:::\n\n\n\n## Heatmaps\n\nHeatmaps are a common way to visualize microbiome data and can provide insights into the relative abundances of different microbial taxa in each sample. To keep things simple, we'll create a heatmap of the relative abundances of the phyla in the dataset.\n\nWe first agglomerate the data at the phylum level and then create a heatmap of the relative abundances of the phyla in the dataset.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(pheatmap)\ntse_phylum <- agglomerateByRank(tse, rank = \"phylum\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: The following values are already present in `metadata` and will be\noverwritten: 'agglomerated_by_rank'. Consider using the 'name' argument to\nspecify alternative names.\n```\n\n\n:::\n\n```{.r .cell-code}\npheatmap(assay(tse_phylum, \"relative_abundance\"))\n```\n\n::: {.cell-output-display}\n![](310_microbiome_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::\n\n\n## Further fun\n\nThe mia package folks have created a [book on microbome analysis in R](https://microbiome.github.io/OMA/docs/devel/) that you can explore for more details on microbiome analysis in R. The book covers a wide range of topics related to microbiome analysis, including data loading, preprocessing, visualization, and statistical analysis. It provides detailed explanations and examples of how to work with microbiome data in R and is a valuable resource for anyone interested in learning more about microbiome analysis.",
    "supporting": [
      "310_microbiome_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}