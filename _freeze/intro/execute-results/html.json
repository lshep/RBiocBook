{
  "hash": "f289ef7b531e2f7874b1bbfc5b5122aa",
  "result": {
    "engine": "knitr",
    "markdown": "# About R\n\nIn this chapter, we will discuss the basics of R and RStudio\\index{RStudio}, two essential\ntools in genomics data analysis. We will cover the advantages of using R and\nRStudio, how to set up RStudio, and the different panels of the RStudio\ninterface.\n\n## What is R?\n\n[R](https://en.wikipedia.org/wiki/R_(programming_language)) is a programming\nlanguage and software environment designed for statistical computing and\ngraphics. It is widely used by statisticians, data scientists, and researchers\nfor data analysis and visualization. R is an open-source language, which means\nit is free to use, modify, and distribute. Over the years, R has become\nparticularly popular in the fields of genomics and bioinformatics, owing to its\nextensive libraries and powerful data manipulation capabilities.\n\nThe R language is a dialect of the S language, which was developed in the 1970s\nat Bell Laboratories. The first version of R was written by Robert Gentleman\nand Ross Ihaka and released in 1995 (see [this slide\ndeck](https://www.stat.auckland.ac.nz/~ihaka/downloads/Massey.pdf) for Ross\nIhaka's take on R's history). Since then, R has been continuously developed by\nthe R Core Team, a group of statisticians and computer scientists. The R Core\nTeam releases a new version of R every year.\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Google trends showing the popularity of R over time based on [Google Trends](https://trends.google.com/trends/explore?cat=5&date=all&geo=US&q=r,python&hl=en). Note that google does not capture the context here; bioinformatics applications are still quite heavily reliant on R.](intro_files/figure-html/fig-r-google-trends-1.png){#fig-r-google-trends width=672}\n:::\n:::\n\n\n\n## Why use R?\n\nThere are several reasons why R is a popular choice for data analysis,\nparticularly in genomics and bioinformatics. These include:\n\n1. **Open-source**: R is free to use and has a large community of developers\n   who contribute to its growth and development. [What is \"open-source\"?](https://opensource.com/resources/what-open-source)\n1. **Extensive libraries**: There are thousands of R packages available for a\n   wide range of tasks, including specialized packages for genomics and\n   bioinformatics. These libraries have been extensively tested and ara\n   available for free.\n1. **Data manipulation**: R has powerful data manipulation capabilities, making\n   it easy (or at least possible) to clean, process, and analyze large\n   datasets.\n1. **Graphics and visualization**: R has excellent tools for creating\n   high-quality graphics and visualizations that can be customized to meet the\n   specific needs of your analysis. In most cases, graphics produced by R are\n   publication-quality. \n1. **Reproducible research**: R enables you to create reproducible research by\n   recording your analysis in a script, which can be easily shared and executed\n   by others. In addition, R does not have a meaningful graphical user\n   interface (GUI), which renders analysis in R much more reproducible than\n   tools that rely on GUI interactions.\n1. **Cross-platform**: R runs on Windows, Mac, and Linux (as well as more\n   obscure systems).\n1. **Interoperability with other languages**: R can interfact with FORTRAN, C,\n   and many other languages.\n1. **Scalability**: R is useful for small and large projects.\n\nI can develop code for analysis on my Mac laptop. I can\nthen install the *same* code on our 20k core cluster and run it in\nparallel on 100 samples, monitor the process, and then update a database (for example)\nwith R when complete. In other words, R is a powerful tool that can be used\nfor a wide range of tasks, from small-scale data analysis to large-scale\ngenomics and omics data science projects.\n\n## Why not use R?\n\n- R cannot do everything.\n- R is not always the “best” tool for the job.\n- R will *not* hold your hand. Often, it will *slap* your hand instead.\n- The documentation can be opaque (but there is documentation).\n- R can drive you crazy (on a good day) or age you prematurely (on a\n    bad one).\n- Finding the right package to do the job you want to do can be\n    challenging; worse, some contributed packages are unreliable.]{}\n- R does not have a meaningfully useful graphical user interface (GUI).\n- Additional languages are becoming increasingly popular for bioinformatics\n  and biological data science, such as Python, Julia, and Rust.\n\n## R License and the Open Source Ideal\n\nR is free (yes, totally free!) and distributed under GNU license. In particular, this license allows one to:\n\n- Download the source code\n- Modify the source code to your heart’s content\n- Distribute the modified source code and even charge\n    money for it, but you must distribute the modified source code\n    under the original GNU license.\n\nThis license means that R will always be\navailable, will always be open source, and can grow organically without\nconstraint.\n\n## Working with R\n\nR is a programming language, and as such, it requires you to write code to\nperform tasks. This can be intimidating for beginners, but it is also what\nmakes R so powerful. In R, you can write scripts to automate tasks, create\nfunctions to encapsulate complex operations, and use packages to extend the\nfunctionality of R.\n\nR can be used interactively or as a scripting language. In interactive mode, you can\nenter commands directly into the R console and see the results immediately. In\nscripting mode, you can write a series of commands in a script file and then\nexecute the entire script at once. This allows you to save your work, reuse code,\nand share your analysis with others.\n\nIn the next section, we will discuss how to set up RStudio, an integrated\ndevelopment environment (IDE) for R that makes it easier to write and execute R\ncode. However, you can use R without RStudio if you prefer to work in the R console or\nanother IDE. RStudio is not required to use R, but it does provide a more user-friendly\ninterface and several useful features that can enhance your R programming experience.\n",
    "supporting": [
      "intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}