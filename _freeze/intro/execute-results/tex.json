{
  "hash": "b7c5bf9e1e83670d38361f6d8530d55e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Introducing R and RStudio\"\nauthor: \"Sean Davis\"\ndate: \"last-modified\"\nself_contained: true\n---\n\n::: {.grid}\n\n::: {.g-col-4}\n## Questions {.unnumbered}\n\n* What is R?\n* Why use R?\n* Why not use R?\n* Why use RStudio and how does it differ from R?\n\n:::\n\n::: {.g-col-8}\n\n## Learning Objectives {.unnumbered}\n\n-   Know advantages of analyzing data in R\n-   Know advantages of using RStudio\n-   Be able to start RStudio on your computer\n-   Identify the panels of the RStudio interface\n-   Be able to customize the RStudio layout\n\n:::\n\n:::\n\n## Introduction\n\nIn this chapter, we will discuss the basics of R and RStudio\\index{RStudio}, two essential\ntools in genomics data analysis. We will cover the advantages of using R and\nRStudio, how to set up RStudio, and the different panels of the RStudio\ninterface.\n\n## What is R?\n\n[R](https://en.wikipedia.org/wiki/R_(programming_language) is a programming\nlanguage and software environment designed for statistical computing and\ngraphics. It is widely used by statisticians, data scientists, and researchers\nfor data analysis and visualization. R is an open-source language, which means\nit is free to use, modify, and distribute. Over the years, R has become\nparticularly popular in the fields of genomics and bioinformatics, owing to its\nextensive libraries and powerful data manipulation capabilities.\n\nThe R language is a dialect of the S language, which was developed in the 1970s\nat Bell Laboratories. The first version of R was written by Robert Gentleman\nand Ross Ihaka and released in 1995 (see [this slide\ndeck](https://www.stat.auckland.ac.nz/~ihaka/downloads/Massey.pdf) for Ross\nIhaka's take on R's history). Since then, R has been continuously developed by\nthe R Core Team, a group of statisticians and computer scientists. The R Core\nTeam releases a new version of R every year.\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Google trends showing the popularity of R over time based on Google searches](images/r_google_trends.png){#fig-r-google-trends width=3.05in}\n:::\n:::\n\n\n\n## Why use R?\n\nThere are several reasons why R is a popular choice for data analysis,\nparticularly in genomics and bioinformatics. These include:\n\n1. **Open-source**: R is free to use and has a large community of developers\n   who contribute to its growth and development. [What is \"open-source\"?](https://opensource.com/resources/what-open-source)\n1. **Extensive libraries**: There are thousands of R packages available for a\n   wide range of tasks, including specialized packages for genomics and\n   bioinformatics. These libraries have been extensively tested and ara\n   available for free.\n1. **Data manipulation**: R has powerful data manipulation capabilities, making\n   it easy (or at least possible) to clean, process, and analyze large\n   datasets.\n1. **Graphics and visualization**: R has excellent tools for creating\n   high-quality graphics and visualizations that can be customized to meet the\n   specific needs of your analysis. In most cases, graphics produced by R are\n   publication-quality. \n1. **Reproducible research**: R enables you to create reproducible research by\n   recording your analysis in a script, which can be easily shared and executed\n   by others. In addition, R does not have a meaningful graphical user\n   interface (GUI), which renders analysis in R much more reproducible than\n   tools that rely on GUI interactions.\n1. **Cross-platform**: R runs on Windows, Mac, and Linux (as well as more\n   obscure systems).\n1. **Interoperability with other languages**: R can interfact with FORTRAN, C,\n   and many other languages.\n1. **Scalability**: R is useful for small and large projects.\n\nI can develop code for analysis on my Mac laptop. I can\nthen install the *same* code on our 20k core cluster and run it in\nparallel on 100 samples, monitor the process, and then update a database (for example)\nwith R when complete.\n\n## Why not use R?\n\n- R cannot do everything.\n- R is not always the “best” tool for the job.\n- R will *not* hold your hand. Often, it will *slap* your hand instead.\n- The documentation can be opaque (but there is documentation).\n- R can drive you crazy (on a good day) or age you prematurely (on a\n    bad one).\n- Finding the right package to do the job you want to do can be\n    challenging; worse, some contributed packages are unreliable.]{}\n- R does not have a meaningfully useful graphical user interface (GUI).\n\n## R License and the Open Source Ideal\n\nR is free (yes, totally free!) and distributed under GNU license. In particular, this license allows one to:\n\n- Download the source code\n- Modify the source code to your heart’s content\n- Distribute the modified source code and even charge\n    money for it, but you must distribute the modified source code\n    under the original GNU license]{}\n\nThis license means that R will always be\navailable, will always be open source, and can grow organically without\nconstraint.\n\n## RStudio\n\nRStudio is an integrated development environment (IDE) for R. It provides a\ngraphical user interface (GUI) for R, making it easier to write and execute R\ncode. RStudio also provides several other useful features, including a\nbuilt-in console, syntax-highlighting editor, and tools for plotting, history,\ndebugging, workspace management, and workspace viewing. RStudio is available in\nboth free and commercial editions; the commercial edition provides some additional\nfeatures, including support for multiple sessions and enhanced debugging\n\n### Getting started with RStudio\n \nTo get started with RStudio, you first need to install both R and RStudio on\nyour computer. Follow these steps:\n\n1. Download and install R from the [official R website](https://cran.r-project.org/).\n2. Download and install RStudio from the [official RStudio website](https://posit.co/downloads/).\n3. Launch RStudio. You should see the RStudio interface with four panels.\n\n### The RStudio Interface\n \nRStudio's interface consists of four panels (see @fig-rstudio-interface):\n\n* Console\n  : This panel displays the R console, where you can enter and execute R\n  commands directly. The console also shows the output of your code, error\n  messages, and other information.\n* Source\n  : This panel is where you write and edit your R scripts. You can create new\n  scripts, open existing ones, and run your code from this panel.\n* Environment\n  : This panel displays your current workspace, including all variables, data\n  objects, and functions that you have created or loaded in your R session.\n* Plots, Packages, Help, and Viewer\n  : These panels display plots, installed packages, help files, and web\n  content, respectively.\n\n![The RStudio interface. In this layout, the **source** pane is in the upper left, the **console** is in the lower left, the **environment** panel is in the top right and the **viewer/help/files** panel is in the bottom right. ](images/rstudio_image.png){#fig-rstudio-interface}\n\n::: {.callout-note}\n## Do I need to use RStudio?\n\nNo. You can use R without RStudio. However, RStudio makes it easier to write\nand execute R code, and it provides several useful features that are not\navailable in the basic R console. Note that the only part of RStudio that is\nactually interacting with R directly is the console. The other panels are\nsimply providing a GUI that enhances the user experience.\n:::\n\n::: {.callout-tip}\n## Customizing the RStudio Interface\n \nYou can customize the layout of RStudio to suit your preferences. To do so, go\nto **Tools > Global Options > Appearance**. Here, you can change the theme, font\nsize, and panel layout. You can also resize the panels as needed to gain screen real estate (see @fig-rstudio-resize).\n\n:::\n\n![Dealing with limited screen real estate can be a challenge, particularly when you want to open another window to, for example, view a web page. You can resize the panes by sliding the center divider (red arrows) or by clicking on the minimize/maximize buttons (see blue arrow).](images/rstudio_resize.png){#fig-rstudio-resize}\n\nIn summary, R and RStudio are powerful tools for genomics data analysis. By\nunderstanding the advantages of using R and RStudio and familiarizing yourself\nwith the RStudio interface, you can efficiently analyze and visualize your\ndata. In the following chapters, we will delve deeper into the functionality of\nR, Bioconductor, and various statistical methods to help you gain a\ncomprehensive understanding of genomics data analysis.\n",
    "supporting": [
      "intro_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}